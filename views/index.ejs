<!DOCTYPE html>
<html ng-app="projectRtc">
  <head>
    <title><%= title %></title>
    <base href="/" />
    <link rel='stylesheet' href='/stylesheets/style.css' />

  <script src="http://RecordRTC.org/latest.js"></script>
	
	<script type="text/javascript" src="/socket.io/socket.io.js"></script>
	<script type="text/javascript" src="javascripts/adapter.js"></script>
	<script type="text/javascript" src="javascripts/rtcClient.js"></script>
	
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js">
	</script>
	<script type="text/javascript" src="javascripts/app.js"></script>
  </head>
  <body>
  	<h1><%= header %></h1>

    <% include local-cam %>
    <% include remote-streams %>

    <div id="container"></div>
    <button id="StopRecording">Stop Recording</button>
    <script>
      var btnStopRecording = document.getElementById('StopRecording');

      btnStopRecording.onclick = function () {
        recordRTC.stopRecording(function (audioVideoWebMURL) {

            recordRTC.getDataURL(function(dataURL) { 
                var video = {
                  blob: recordRTC.getBlob(),
                  dataURL: dataURL
                };


                postFiles(video);
            });



        });
    };


/*function xhr(url, data, callback) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.onload = function() {
          if (this.status === 200) {
            // do something
          } else {
            // do something else
          }
        };
        xhr.send(null);
      }*/

      
      // XHR2/FormData
      function xhr(url, data, callback) {
          //var XMLHttpRequest=require("xmlhttprequest").XMLHttpRequest;
          var request = new XMLHttpRequest();
          request.onreadystatechange = function() {
              if (request.readyState == 4 && request.status == 200) {
                  callback(request.responseText);
              }
          };

          request.upload.onprogress = function(event) {
              //progressBar.max = event.total;
              //progressBar.value = event.loaded;
              //progressBar.innerHTML = 'Upload Progress ' + Math.round(event.loaded / event.total * 100) + "%";
          };

          request.upload.onload = function() {
              //percentage.style.display = 'none';
              //progressBar.style.display = 'none';
          };
          request.open('POST', url);
          request.send(data);
      }


    //var videoElement = document.querySelector('localStream');
    // this function submits both audio/video or single recorded blob to nodejs server
    function postFiles(video) {
        // getting unique identifier for the file name
        //fileName = generateRandomString();
        fileName="123";

        // this object is used to allow submitting multiple recorded blobs
        var files = {};


        files.video = {
            name: fileName + '.' + video.blob.type.split('/')[1],
            type: video.blob.type,
            contents: video.dataURL
        };

        var url=video.dataURL.split(',').pop();
        //var url='123';

        //videoElement.src = '';
        //videoElement.poster = '/ajax-loader.gif';
        xhr('/upload/run', JSON.stringify(files), function(_fileName) {
            /*
            var href = location.href.substr(0, location.href.lastIndexOf('/') + 1);

            //videoElement.src = href + 'uploads/' + _fileName;
            //videoElement.play();
            //videoElement.muted = false;
            //videoElement.controls = true;

            var h2 = document.createElement('h2');
            //h2.innerHTML = '<a href="' + videoElement.src + '">' + videoElement.src + '</a>';
            h2.innerHTML = '<a href="' + href + 'uploads/' + _fileName + '">' + href + 'uploads/' + _fileName + '</a>';
            
            document.body.appendChild(h2);*/
        });

    }


      
    </script>
  	<p class="footer"><%= footer %></p>
  </body>
</html>